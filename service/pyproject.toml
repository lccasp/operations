[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "operations-service"
version = "1.0.0"
description = "基于 FastAPI 的后端服务，支持 React Native 移动客户端"
authors = [
    {name = "Operations Team", email = "team@operations.com"},
]
readme = "README.md"
requires-python = ">=3.9"
keywords = ["fastapi", "sqlalchemy", "postgresql", "react-native"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment", 
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]

dependencies = [
    # Web框架
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    
    # 用户认证
    "fastapi-users[sqlalchemy]>=12.1.0",
    "fastapi-users-db-sqlalchemy>=6.0.0",
    
    # 数据库相关
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",  # PostgreSQL驱动
    "asyncpg>=0.29.0",  # 异步PostgreSQL驱动
    
    # 配置管理
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    
    # 工具库
    "python-jose[cryptography]>=3.3.0",  # JWT token处理
    "passlib[bcrypt]>=1.7.4",  # 密码哈希
    "python-multipart>=0.0.6",  # 文件上传支持
    
    # Redis支持
    "redis>=5.0.0",
    "celery>=5.3.0",  # 任务队列
    
    # 数据验证和序列化
    "email-validator>=2.0.0",
    
    # HTTP客户端
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    # 测试工具
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # 测试客户端
    
    # 代码质量
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    
    # 开发工具
    "pre-commit>=3.5.0",
]

prod = [
    "gunicorn>=21.2.0",
]

[project.urls]
"Homepage" = "https://github.com/operations/service"
"Repository" = "https://github.com/operations/service.git"
"Documentation" = "https://github.com/operations/service/docs"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sqlalchemy.*",
    "alembic.*",
    "redis.*",
    "celery.*",
]
ignore_missing_imports = true

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: 单元测试",
    "integration: 集成测试",
    "slow: 慢速测试",
]
